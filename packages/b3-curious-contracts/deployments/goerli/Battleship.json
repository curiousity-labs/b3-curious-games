{
  "address": "0x614612c314eDf4F86d32fDAC81542e9E642dA137",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "winner",
          "type": "address"
        }
      ],
      "name": "GameFinished",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "team",
          "type": "address"
        }
      ],
      "name": "TeamReady",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "team",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes4",
          "name": "target",
          "type": "bytes4"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isSuccessful",
          "type": "bool"
        }
      ],
      "name": "TurnFinished",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "currentTurn",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "game_winner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_teamOne",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_teamTwo",
          "type": "address"
        }
      ],
      "name": "init",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4[15]",
          "name": "targets",
          "type": "bytes4[15]"
        }
      ],
      "name": "setTeamOnePieces",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4[15]",
          "name": "targets",
          "type": "bytes4[15]"
        }
      ],
      "name": "setTeamTwoPieces",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "target",
          "type": "bytes4"
        }
      ],
      "name": "takeTurn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "teamOne",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "teamTwo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x69c90c6fbfa78fe300c4ce1576285a2b3e2a5529c32b0fae4ed77f8d3b0b12ec",
  "receipt": {
    "to": null,
    "from": "0x629750317d320B8bB4d48D345A6d699Cc855c4a6",
    "contractAddress": "0x614612c314eDf4F86d32fDAC81542e9E642dA137",
    "transactionIndex": 40,
    "gasUsed": "582741",
    "logsBloom": "0x
    "blockHash": "0xd95eac38ca5abae7e2bcdaf3dfe72001b338544cc224f81375cc15431b211e83",
    "transactionHash": "0x69c90c6fbfa78fe300c4ce1576285a2b3e2a5529c32b0fae4ed77f8d3b0b12ec",
    "logs": [],
    "blockNumber": 8307236,
    "cumulativeGasUsed": "12023754",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "f8833746c076fd78c143eb631c454352",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"}],\"name\":\"GameFinished\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"team\",\"type\":\"address\"}],\"name\":\"TeamReady\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"team\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes4\",\"name\":\"target\",\"type\":\"bytes4\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isSuccessful\",\"type\":\"bool\"}],\"name\":\"TurnFinished\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"currentTurn\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"game_winner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_teamOne\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_teamTwo\",\"type\":\"address\"}],\"name\":\"init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4[15]\",\"name\":\"targets\",\"type\":\"bytes4[15]\"}],\"name\":\"setTeamOnePieces\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4[15]\",\"name\":\"targets\",\"type\":\"bytes4[15]\"}],\"name\":\"setTeamTwoPieces\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"target\",\"type\":\"bytes4\"}],\"name\":\"takeTurn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"teamOne\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"teamTwo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"@Da-Colon (github)\",\"kind\":\"dev\",\"methods\":{},\"title\":\"onchain battleship\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Battleship.sol\":\"Battleship\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"contracts/Battleship.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8.17;\\n\\n/**\\n * @title onchain battleship\\n * @author @Da-Colon (github)\\n */\\ncontract Battleship {\\n    event TeamReady(address team);\\n    event TurnFinished(address team, bytes4 target, bool isSuccessful);\\n    event GameFinished(address winner);\\n\\n    address public game_winner = address(0);\\n    address public teamOne = address(0);\\n    address public teamTwo = address(0);\\n    address public currentTurn = address(0);\\n\\n    mapping(address => bool) private teamReady;\\n    mapping(address => mapping(bytes4 => uint8)) private locations;\\n    mapping(address => TeamHits) private teamHits;\\n\\n    struct TeamHits {\\n        uint8 hitCount;\\n        mapping(bytes4 => uint8) targeted;\\n    }\\n\\n    modifier piecesSet(bool isReady) {\\n        require(teamReady[msg.sender] == isReady, \\\"Pieces Set\\\");\\n        _;\\n    }\\n\\n    modifier gameOver() {\\n        require(game_winner == address(0), \\\"Game is Over\\\");\\n        _;\\n    }\\n\\n    modifier checkTurn() {\\n        if ((currentTurn == address(0) && msg.sender == teamTwo)) {\\n            _;\\n            return;\\n        }\\n        require(currentTurn == msg.sender, \\\"Not your turn\\\");\\n        _;\\n    }\\n\\n    function checkAndSetPieces(\\n        bytes4[15] memory targets,\\n        address team\\n    ) private {\\n        for (uint256 i; i < targets.length; i++) {\\n            locations[team][targets[i]] = 1;\\n        }\\n        teamReady[team] = true;\\n        emit TeamReady(team);\\n    }\\n\\n    function setTeamOnePieces(\\n        bytes4[15] memory targets\\n    ) external piecesSet(false) {\\n        require(msg.sender == teamOne, \\\"Team One Only\\\");\\n        checkAndSetPieces(targets, msg.sender);\\n    }\\n\\n    function setTeamTwoPieces(\\n        bytes4[15] memory targets\\n    ) external piecesSet(false) {\\n        require(msg.sender == teamTwo, \\\"Team Two Only\\\");\\n        checkAndSetPieces(targets, msg.sender);\\n    }\\n\\n    function targetSpot(bytes4 target, address defTeam) private gameOver {\\n        if (\\n            locations[defTeam][target] == 1 &&\\n            teamHits[msg.sender].targeted[target] == 0\\n        ) {\\n            uint8 raisedHit = ++teamHits[msg.sender].hitCount;\\n            teamHits[msg.sender].hitCount = raisedHit;\\n            teamHits[msg.sender].targeted[target] = 1;\\n            if (raisedHit == 15) {\\n                game_winner = msg.sender;\\n                emit GameFinished(msg.sender);\\n            } else {\\n                emit TurnFinished(msg.sender, target, true);\\n            }\\n        } else {\\n            emit TurnFinished(msg.sender, target, false);\\n        }\\n\\n        currentTurn = defTeam;\\n    }\\n\\n    function takeTurn(bytes4 target) external piecesSet(true) checkTurn {\\n        if (msg.sender == teamOne) {\\n            targetSpot(target, teamTwo);\\n        } else {\\n            targetSpot(target, teamOne);\\n        }\\n    }\\n\\n    function init(address _teamOne, address _teamTwo) public {\\n        teamOne = _teamOne;\\n        teamTwo = _teamTwo;\\n    }\\n}\\n\",\"keccak256\":\"0x9710fc5ac693e5e945604ffe2320895c6e2ea51ed166eb826de7a5bf9b5f5a08\",\"license\":\"GPL-3.0\"}},\"version\":1}",
  "bytecode": "0x6080604052600080546001600160a01b03199081169091556001805482169055600280548216905560038054909116905534801561003c57600080fd5b5061096f8061004c6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063deb612861161005b578063deb61286146100f7578063e7d4eb091461010a578063ef61b3201461011d578063f09a40161461013057600080fd5b8063356c22ec1461008d57806373f081ee146100bc57806383cbd06d146100d1578063d8e4f9d9146100e4575b600080fd5b6001546100a0906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b6100cf6100ca3660046107b6565b610179565b005b6000546100a0906001600160a01b031681565b6002546100a0906001600160a01b031681565b6003546100a0906001600160a01b031681565b6100cf6101183660046107d8565b6102d3565b6100cf61012b3660046107d8565b610397565b6100cf61013e366004610883565b600180546001600160a01b0393841673ffffffffffffffffffffffffffffffffffffffff199182161790915560028054929093169116179055565b3360009081526004602052604090205460019060ff16151581146101e45760405162461bcd60e51b815260206004820152600a60248201527f506965636573205365740000000000000000000000000000000000000000000060448201526064015b60405180910390fd5b6003546001600160a01b031615801561020757506002546001600160a01b031633145b15610250576001546001600160a01b03163303610239576002546102359083906001600160a01b0316610451565b5050565b6001546102359083906001600160a01b0316610451565b6003546001600160a01b031633146102aa5760405162461bcd60e51b815260206004820152600d60248201527f4e6f7420796f7572207475726e0000000000000000000000000000000000000060448201526064016101db565b6001546001600160a01b03163303610239576002546102359083906001600160a01b0316610451565b3360009081526004602052604081205460ff16156103335760405162461bcd60e51b815260206004820152600a60248201527f506965636573205365740000000000000000000000000000000000000000000060448201526064016101db565b6001546001600160a01b0316331461038d5760405162461bcd60e51b815260206004820152600d60248201527f5465616d204f6e65204f6e6c790000000000000000000000000000000000000060448201526064016101db565b61023582336106be565b3360009081526004602052604081205460ff16156103f75760405162461bcd60e51b815260206004820152600a60248201527f506965636573205365740000000000000000000000000000000000000000000060448201526064016101db565b6002546001600160a01b0316331461038d5760405162461bcd60e51b815260206004820152600d60248201527f5465616d2054776f204f6e6c790000000000000000000000000000000000000060448201526064016101db565b6000546001600160a01b0316156104aa5760405162461bcd60e51b815260206004820152600c60248201527f47616d65206973204f766572000000000000000000000000000000000000000060448201526064016101db565b6001600160a01b03811660009081526005602090815260408083206001600160e01b03198616845290915290205460ff16600114801561051257503360009081526006602090815260408083206001600160e01b03198616845260010190915290205460ff16155b1561064457336000908152600660205260408120805482906105369060ff166108cc565b825460ff8083166101009490940a84810291021990911617909255336000908152600660209081526040808320805460ff19908116861782556001600160e01b03198a1685526001918201909352922080549091169091179055909150600f036105f4576000805473ffffffffffffffffffffffffffffffffffffffff1916339081179091556040519081527f1728dd43546edd06fabfe796e5b641a151aa90998bfd1b1ec0ae98c6e77084599060200160405180910390a161063e565b604080513381526001600160e01b03198516602082015260018183015290517f5337bbde7e7c72b09a00941bda0ba1caa9206a8bc93d2247d695caea0a4b6de49181900360600190a15b5061068e565b604080513381526001600160e01b03198416602082015260008183015290517f5337bbde7e7c72b09a00941bda0ba1caa9206a8bc93d2247d695caea0a4b6de49181900360600190a15b6003805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b039290921691909117905550565b60005b600f81101561073d576001600160a01b03821660009081526005602052604081206001918584600f81106106f7576106f76108eb565b602090810291909101516001600160e01b0319168252810191909152604001600020805460ff191660ff929092169190911790558061073581610901565b9150506106c1565b506001600160a01b038116600081815260046020908152604091829020805460ff1916600117905590519182527fe2e2b3556c27b5e050482e0af7aac4fa3d28cdbed7ffa0465379328007633f26910160405180910390a15050565b80356001600160e01b0319811681146107b157600080fd5b919050565b6000602082840312156107c857600080fd5b6107d182610799565b9392505050565b60006101e08083850312156107ec57600080fd5b83601f8401126107fb57600080fd5b60405181810181811067ffffffffffffffff8211171561082b57634e487b7160e01b600052604160045260246000fd5b60405290830190808583111561084057600080fd5b845b838110156108615761085381610799565b825260209182019101610842565b509095945050505050565b80356001600160a01b03811681146107b157600080fd5b6000806040838503121561089657600080fd5b61089f8361086c565b91506108ad6020840161086c565b90509250929050565b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff81036108e2576108e26108b6565b60010192915050565b634e487b7160e01b600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610932576109326108b6565b506001019056fea2646970667358221220fb5522f9caa121bd00e51e7f42a3cacb33bb33b906c8da01168ff30c1dca57d464736f6c63430008110033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100885760003560e01c8063deb612861161005b578063deb61286146100f7578063e7d4eb091461010a578063ef61b3201461011d578063f09a40161461013057600080fd5b8063356c22ec1461008d57806373f081ee146100bc57806383cbd06d146100d1578063d8e4f9d9146100e4575b600080fd5b6001546100a0906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b6100cf6100ca3660046107b6565b610179565b005b6000546100a0906001600160a01b031681565b6002546100a0906001600160a01b031681565b6003546100a0906001600160a01b031681565b6100cf6101183660046107d8565b6102d3565b6100cf61012b3660046107d8565b610397565b6100cf61013e366004610883565b600180546001600160a01b0393841673ffffffffffffffffffffffffffffffffffffffff199182161790915560028054929093169116179055565b3360009081526004602052604090205460019060ff16151581146101e45760405162461bcd60e51b815260206004820152600a60248201527f506965636573205365740000000000000000000000000000000000000000000060448201526064015b60405180910390fd5b6003546001600160a01b031615801561020757506002546001600160a01b031633145b15610250576001546001600160a01b03163303610239576002546102359083906001600160a01b0316610451565b5050565b6001546102359083906001600160a01b0316610451565b6003546001600160a01b031633146102aa5760405162461bcd60e51b815260206004820152600d60248201527f4e6f7420796f7572207475726e0000000000000000000000000000000000000060448201526064016101db565b6001546001600160a01b03163303610239576002546102359083906001600160a01b0316610451565b3360009081526004602052604081205460ff16156103335760405162461bcd60e51b815260206004820152600a60248201527f506965636573205365740000000000000000000000000000000000000000000060448201526064016101db565b6001546001600160a01b0316331461038d5760405162461bcd60e51b815260206004820152600d60248201527f5465616d204f6e65204f6e6c790000000000000000000000000000000000000060448201526064016101db565b61023582336106be565b3360009081526004602052604081205460ff16156103f75760405162461bcd60e51b815260206004820152600a60248201527f506965636573205365740000000000000000000000000000000000000000000060448201526064016101db565b6002546001600160a01b0316331461038d5760405162461bcd60e51b815260206004820152600d60248201527f5465616d2054776f204f6e6c790000000000000000000000000000000000000060448201526064016101db565b6000546001600160a01b0316156104aa5760405162461bcd60e51b815260206004820152600c60248201527f47616d65206973204f766572000000000000000000000000000000000000000060448201526064016101db565b6001600160a01b03811660009081526005602090815260408083206001600160e01b03198616845290915290205460ff16600114801561051257503360009081526006602090815260408083206001600160e01b03198616845260010190915290205460ff16155b1561064457336000908152600660205260408120805482906105369060ff166108cc565b825460ff8083166101009490940a84810291021990911617909255336000908152600660209081526040808320805460ff19908116861782556001600160e01b03198a1685526001918201909352922080549091169091179055909150600f036105f4576000805473ffffffffffffffffffffffffffffffffffffffff1916339081179091556040519081527f1728dd43546edd06fabfe796e5b641a151aa90998bfd1b1ec0ae98c6e77084599060200160405180910390a161063e565b604080513381526001600160e01b03198516602082015260018183015290517f5337bbde7e7c72b09a00941bda0ba1caa9206a8bc93d2247d695caea0a4b6de49181900360600190a15b5061068e565b604080513381526001600160e01b03198416602082015260008183015290517f5337bbde7e7c72b09a00941bda0ba1caa9206a8bc93d2247d695caea0a4b6de49181900360600190a15b6003805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b039290921691909117905550565b60005b600f81101561073d576001600160a01b03821660009081526005602052604081206001918584600f81106106f7576106f76108eb565b602090810291909101516001600160e01b0319168252810191909152604001600020805460ff191660ff929092169190911790558061073581610901565b9150506106c1565b506001600160a01b038116600081815260046020908152604091829020805460ff1916600117905590519182527fe2e2b3556c27b5e050482e0af7aac4fa3d28cdbed7ffa0465379328007633f26910160405180910390a15050565b80356001600160e01b0319811681146107b157600080fd5b919050565b6000602082840312156107c857600080fd5b6107d182610799565b9392505050565b60006101e08083850312156107ec57600080fd5b83601f8401126107fb57600080fd5b60405181810181811067ffffffffffffffff8211171561082b57634e487b7160e01b600052604160045260246000fd5b60405290830190808583111561084057600080fd5b845b838110156108615761085381610799565b825260209182019101610842565b509095945050505050565b80356001600160a01b03811681146107b157600080fd5b6000806040838503121561089657600080fd5b61089f8361086c565b91506108ad6020840161086c565b90509250929050565b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff81036108e2576108e26108b6565b60010192915050565b634e487b7160e01b600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610932576109326108b6565b506001019056fea2646970667358221220fb5522f9caa121bd00e51e7f42a3cacb33bb33b906c8da01168ff30c1dca57d464736f6c63430008110033",
  "devdoc": {
    "author": "@Da-Colon (github)",
    "kind": "dev",
    "methods": {},
    "title": "onchain battleship",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 104,
        "contract": "contracts/Battleship.sol:Battleship",
        "label": "game_winner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 110,
        "contract": "contracts/Battleship.sol:Battleship",
        "label": "teamOne",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 116,
        "contract": "contracts/Battleship.sol:Battleship",
        "label": "teamTwo",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 122,
        "contract": "contracts/Battleship.sol:Battleship",
        "label": "currentTurn",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 126,
        "contract": "contracts/Battleship.sol:Battleship",
        "label": "teamReady",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 132,
        "contract": "contracts/Battleship.sol:Battleship",
        "label": "locations",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_mapping(t_bytes4,t_uint8))"
      },
      {
        "astId": 137,
        "contract": "contracts/Battleship.sol:Battleship",
        "label": "teamHits",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_struct(TeamHits)144_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes4": {
        "encoding": "inplace",
        "label": "bytes4",
        "numberOfBytes": "4"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_bytes4,t_uint8))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(bytes4 => uint8))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_bytes4,t_uint8)"
      },
      "t_mapping(t_address,t_struct(TeamHits)144_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct Battleship.TeamHits)",
        "numberOfBytes": "32",
        "value": "t_struct(TeamHits)144_storage"
      },
      "t_mapping(t_bytes4,t_uint8)": {
        "encoding": "mapping",
        "key": "t_bytes4",
        "label": "mapping(bytes4 => uint8)",
        "numberOfBytes": "32",
        "value": "t_uint8"
      },
      "t_struct(TeamHits)144_storage": {
        "encoding": "inplace",
        "label": "struct Battleship.TeamHits",
        "members": [
          {
            "astId": 139,
            "contract": "contracts/Battleship.sol:Battleship",
            "label": "hitCount",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8"
          },
          {
            "astId": 143,
            "contract": "contracts/Battleship.sol:Battleship",
            "label": "targeted",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_bytes4,t_uint8)"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}