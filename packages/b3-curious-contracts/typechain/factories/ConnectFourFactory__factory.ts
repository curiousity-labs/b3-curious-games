/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  ConnectFourFactory,
  ConnectFourFactoryInterface,
} from "../ConnectFourFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "implAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "seasonId",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "address",
        name: "gameAddress",
        type: "address",
      },
    ],
    name: "NewConnectFourSeasonCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    name: "connectFourGames",
    outputs: [
      {
        internalType: "contract ConnectFour",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deployNewSeason",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getGames",
    outputs: [
      {
        internalType: "contract ConnectFour[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161051a38038061051a83398101604081905261002f9161005a565b600080546001600160a01b0390921661010002610100600160a81b031990921691909117905561008a565b60006020828403121561006c57600080fd5b81516001600160a01b038116811461008357600080fd5b9392505050565b610481806100996000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806314c7457114610046578063c04c594714610065578063c46f7fe71461007a575b600080fd5b61004e6100d5565b60405160ff90911681526020015b60405180910390f35b61006d6101c4565b60405161005c919061036e565b6100b06100883660046103c8565b60016020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161005c565b6000805481906100ff90610100900473ffffffffffffffffffffffffffffffffffffffff166102a2565b6000805460ff908116825260016020908152604080842080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff87169081179091559354815193168352908201929092529192507f7a6fa76d0a77eb17c494725b653ed447a947a86a0fe8607f532e864f9ae9d4ec910160405180910390a16000805460ff1690806101a6836103f2565b91906101000a81548160ff021916908360ff16021790555091505090565b600080546060919060ff1667ffffffffffffffff8111156101e7576101e761041f565b604051908082528060200260200182016040528015610210578160200160208202803683370190505b50905060005b60005460ff908116908216101561029c5760ff8116600081815260016020526040902054835173ffffffffffffffffffffffffffffffffffffffff909116918491811061026557610265610435565b73ffffffffffffffffffffffffffffffffffffffff9092166020928302919091019091015280610294816103f2565b915050610216565b50919050565b6000763d602d80600a3d3981f3363d3d373d3d3d363d730000008260601b60e81c176000526e5af43d82803e903d91602b57fd5bf38260781b17602052603760096000f0905073ffffffffffffffffffffffffffffffffffffffff8116610369576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f455243313136373a20637265617465206661696c656400000000000000000000604482015260640160405180910390fd5b919050565b6020808252825182820181905260009190848201906040850190845b818110156103bc57835173ffffffffffffffffffffffffffffffffffffffff168352928401929184019160010161038a565b50909695505050505050565b6000602082840312156103da57600080fd5b813560ff811681146103eb57600080fd5b9392505050565b600060ff821660ff810361041657634e487b7160e01b600052601160045260246000fd5b60010192915050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fdfea26469706673582212208f60bfbbd01f3d128c73467c180edb90df23029d495f20b45d83020da892ae6764736f6c63430008110033";

type ConnectFourFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ConnectFourFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ConnectFourFactory__factory extends ContractFactory {
  constructor(...args: ConnectFourFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    implAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ConnectFourFactory> {
    return super.deploy(
      implAddress,
      overrides || {}
    ) as Promise<ConnectFourFactory>;
  }
  override getDeployTransaction(
    implAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(implAddress, overrides || {});
  }
  override attach(address: string): ConnectFourFactory {
    return super.attach(address) as ConnectFourFactory;
  }
  override connect(signer: Signer): ConnectFourFactory__factory {
    return super.connect(signer) as ConnectFourFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ConnectFourFactoryInterface {
    return new utils.Interface(_abi) as ConnectFourFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ConnectFourFactory {
    return new Contract(address, _abi, signerOrProvider) as ConnectFourFactory;
  }
}
