/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  ConnectFourFactory,
  ConnectFourFactoryInterface,
} from "../ConnectFourFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "implAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "seasonId",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "address",
        name: "gameAddress",
        type: "address",
      },
    ],
    name: "NewConnectFourSeasonCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    name: "connectFourGames",
    outputs: [
      {
        internalType: "contract ConnectFour",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deployNewSeason",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getGames",
    outputs: [
      {
        internalType: "contract ConnectFour[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161047938038061047983398101604081905261002f9161005a565b600080546001600160a01b0390921661010002610100600160a81b031990921691909117905561008a565b60006020828403121561006c57600080fd5b81516001600160a01b038116811461008357600080fd5b9392505050565b6103e0806100996000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806314c7457114610046578063c04c594714610065578063c46f7fe71461007a575b600080fd5b61004e6100bb565b60405160ff90911681526020015b60405180910390f35b61006d610178565b60405161005c91906102da565b6100a3610088366004610327565b6001602052600090815260409020546001600160a01b031681565b6040516001600160a01b03909116815260200161005c565b6000805481906100d89061010090046001600160a01b031661023c565b6000805460ff908116825260016020908152604080842080546001600160a01b0319166001600160a01b0387169081179091559354815193168352908201929092529192507f7a6fa76d0a77eb17c494725b653ed447a947a86a0fe8607f532e864f9ae9d4ec910160405180910390a16000805460ff16908061015a83610351565b91906101000a81548160ff021916908360ff16021790555091505090565b600080546060919060ff1667ffffffffffffffff81111561019b5761019b61037e565b6040519080825280602002602001820160405280156101c4578160200160208202803683370190505b50905060005b60005460ff90811690821610156102365760ff811660008181526001602052604090205483516001600160a01b03909116918491811061020c5761020c610394565b6001600160a01b03909216602092830291909101909101528061022e81610351565b9150506101ca565b50919050565b6000763d602d80600a3d3981f3363d3d373d3d3d363d730000008260601b60e81c176000526e5af43d82803e903d91602b57fd5bf38260781b17602052603760096000f090506001600160a01b0381166102d55760405162461bcd60e51b8152602060048201526016602482015275115490cc4c4d8dce8818dc99585d194819985a5b195960521b604482015260640160405180910390fd5b919050565b6020808252825182820181905260009190848201906040850190845b8181101561031b5783516001600160a01b0316835292840192918401916001016102f6565b50909695505050505050565b60006020828403121561033957600080fd5b813560ff8116811461034a57600080fd5b9392505050565b600060ff821660ff810361037557634e487b7160e01b600052601160045260246000fd5b60010192915050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fdfea264697066735822122066bfff7e6546132205da4e1ad87427bc751e235bc5bcadb019a3fa9f37ae405d64736f6c63430008110033";

type ConnectFourFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ConnectFourFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ConnectFourFactory__factory extends ContractFactory {
  constructor(...args: ConnectFourFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    implAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ConnectFourFactory> {
    return super.deploy(
      implAddress,
      overrides || {}
    ) as Promise<ConnectFourFactory>;
  }
  override getDeployTransaction(
    implAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(implAddress, overrides || {});
  }
  override attach(address: string): ConnectFourFactory {
    return super.attach(address) as ConnectFourFactory;
  }
  override connect(signer: Signer): ConnectFourFactory__factory {
    return super.connect(signer) as ConnectFourFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ConnectFourFactoryInterface {
    return new utils.Interface(_abi) as ConnectFourFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ConnectFourFactory {
    return new Contract(address, _abi, signerOrProvider) as ConnectFourFactory;
  }
}
