/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  BattleshipFactory,
  BattleshipFactoryInterface,
} from "../BattleshipFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "implAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "gameAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "teamOne",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "teamTwo",
        type: "address",
      },
    ],
    name: "GameCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "teamtwo",
        type: "address",
      },
    ],
    name: "deployAndChallange",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getGames",
    outputs: [
      {
        internalType: "contract BattleshipImpl[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161054a38038061054a83398101604081905261002f91610054565b600180546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b6104b7806100936000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063ae783a821461003b578063c04c594714610050575b600080fd5b61004e610049366004610378565b61006e565b005b6100586101dc565b60405161006591906103b5565b60405180910390f35b6001546000906100939073ffffffffffffffffffffffffffffffffffffffff166102ac565b6040517ff09a401600000000000000000000000000000000000000000000000000000000815233600482015273ffffffffffffffffffffffffffffffffffffffff84811660248301529192509082169063f09a401690604401600060405180830381600087803b15801561010657600080fd5b505af115801561011a573d6000803e3d6000fd5b505060008054815260026020526040812080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8616179055805490925082915061017a9061040f565b91829055506000556040805173ffffffffffffffffffffffffffffffffffffffff838116825233602083015284168183015290517fd3432ff5c78a4cfac45492c26900080695bc03e553bf581d99afdee4869c3e719181900360600190a15050565b60606000805467ffffffffffffffff8111156101fa576101fa610455565b604051908082528060200260200182016040528015610223578160200160208202803683370190505b50905060005b6000548110156102a657600081815260026020526040902054825173ffffffffffffffffffffffffffffffffffffffff9091169083908390811061026f5761026f61046b565b73ffffffffffffffffffffffffffffffffffffffff909216602092830291909101909101528061029e8161040f565b915050610229565b50919050565b6000763d602d80600a3d3981f3363d3d373d3d3d363d730000008260601b60e81c176000526e5af43d82803e903d91602b57fd5bf38260781b17602052603760096000f0905073ffffffffffffffffffffffffffffffffffffffff8116610373576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f455243313136373a20637265617465206661696c656400000000000000000000604482015260640160405180910390fd5b919050565b60006020828403121561038a57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146103ae57600080fd5b9392505050565b6020808252825182820181905260009190848201906040850190845b8181101561040357835173ffffffffffffffffffffffffffffffffffffffff16835292840192918401916001016103d1565b50909695505050505050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361044e57634e487b7160e01b600052601160045260246000fd5b5060010190565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fdfea2646970667358221220331b3db83cdcd917e53dfe470c58efd1f55aba41a21bdd53a5da244727db8ced64736f6c63430008110033";

type BattleshipFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BattleshipFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BattleshipFactory__factory extends ContractFactory {
  constructor(...args: BattleshipFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    implAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BattleshipFactory> {
    return super.deploy(
      implAddress,
      overrides || {}
    ) as Promise<BattleshipFactory>;
  }
  override getDeployTransaction(
    implAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(implAddress, overrides || {});
  }
  override attach(address: string): BattleshipFactory {
    return super.attach(address) as BattleshipFactory;
  }
  override connect(signer: Signer): BattleshipFactory__factory {
    return super.connect(signer) as BattleshipFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BattleshipFactoryInterface {
    return new utils.Interface(_abi) as BattleshipFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BattleshipFactory {
    return new Contract(address, _abi, signerOrProvider) as BattleshipFactory;
  }
}
