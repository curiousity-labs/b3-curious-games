/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  BattleshipFactory,
  BattleshipFactoryInterface,
} from "../BattleshipFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "implAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "gameAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
    ],
    name: "GameCreated",
    type: "event",
  },
  {
    inputs: [],
    name: "battleshipImplAddr",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "teamtwo",
        type: "address",
      },
    ],
    name: "deployAndChallange",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_gameId",
        type: "uint256",
      },
    ],
    name: "getGame",
    outputs: [
      {
        internalType: "contract BattleshipImpl",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getGames",
    outputs: [
      {
        internalType: "contract BattleshipImpl[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161055338038061055383398101604081905261002f91610054565b600280546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b6104c0806100936000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80631873516d14610051578063a2f77bcc14610081578063ae783a82146100aa578063c04c5947146100bf575b600080fd5b600254610064906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61006461008f366004610382565b6000908152602081905260409020546001600160a01b031690565b6100bd6100b836600461039b565b6100d4565b005b6100c761020c565b60405161007891906103cb565b6002546000906100ec906001600160a01b03166102c3565b6040517ff09a40160000000000000000000000000000000000000000000000000000000081523360048201526001600160a01b0384811660248301529192509082169063f09a401690604401600060405180830381600087803b15801561015257600080fd5b505af1158015610166573d6000803e3d6000fd5b505060018054600090815260208190526040812080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b038716179055815491935091506101bb90610418565b91829055506001819055604080516001600160a01b038416815260208101929092527f306841c3fce8498c2d9b7194b8da4c04d03847394e237b625ce6d029b107f077910160405180910390a15050565b6060600060015467ffffffffffffffff81111561022b5761022b61045e565b604051908082528060200260200182016040528015610254578160200160208202803683370190505b50905060005b6001548110156102bd5760008181526020819052604090205482516001600160a01b039091169083908390811061029357610293610474565b6001600160a01b0390921660209283029190910190910152806102b581610418565b91505061025a565b50919050565b6000763d602d80600a3d3981f3363d3d373d3d3d363d730000008260601b60e81c176000526e5af43d82803e903d91602b57fd5bf38260781b17602052603760096000f090506001600160a01b03811661037d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f455243313136373a20637265617465206661696c656400000000000000000000604482015260640160405180910390fd5b919050565b60006020828403121561039457600080fd5b5035919050565b6000602082840312156103ad57600080fd5b81356001600160a01b03811681146103c457600080fd5b9392505050565b6020808252825182820181905260009190848201906040850190845b8181101561040c5783516001600160a01b0316835292840192918401916001016103e7565b50909695505050505050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361045757634e487b7160e01b600052601160045260246000fd5b5060010190565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fdfea264697066735822122070d5d469a73f3d925baa7347445279f642acb839d2fa34afb852468a9156202764736f6c63430008110033";

type BattleshipFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BattleshipFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BattleshipFactory__factory extends ContractFactory {
  constructor(...args: BattleshipFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    implAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BattleshipFactory> {
    return super.deploy(
      implAddress,
      overrides || {}
    ) as Promise<BattleshipFactory>;
  }
  override getDeployTransaction(
    implAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(implAddress, overrides || {});
  }
  override attach(address: string): BattleshipFactory {
    return super.attach(address) as BattleshipFactory;
  }
  override connect(signer: Signer): BattleshipFactory__factory {
    return super.connect(signer) as BattleshipFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BattleshipFactoryInterface {
    return new utils.Interface(_abi) as BattleshipFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BattleshipFactory {
    return new Contract(address, _abi, signerOrProvider) as BattleshipFactory;
  }
}
