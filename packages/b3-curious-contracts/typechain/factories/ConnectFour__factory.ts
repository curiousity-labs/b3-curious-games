/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { ConnectFour, ConnectFourInterface } from "../ConnectFour";

const _abi = [
  {
    inputs: [],
    name: "GameOver",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidSelection",
    type: "error",
  },
  {
    inputs: [],
    name: "NotYourTurn",
    type: "error",
  },
  {
    inputs: [],
    name: "SeasonOver",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "teamOne",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "teamTwo",
        type: "address",
      },
    ],
    name: "GameCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "winner",
        type: "address",
      },
    ],
    name: "GameFinished",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "team",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "column",
        type: "uint8",
      },
    ],
    name: "TurnTaken",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "opponent",
        type: "address",
      },
    ],
    name: "challenge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "gameId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "getGame",
    outputs: [
      {
        internalType: "address",
        name: "teamOne",
        type: "address",
      },
      {
        internalType: "address",
        name: "teamTwo",
        type: "address",
      },
      {
        internalType: "address",
        name: "winner",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "turn",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_gameId",
        type: "uint8",
      },
    ],
    name: "getGameBoard",
    outputs: [
      {
        internalType: "uint8[6][6]",
        name: "",
        type: "uint8[6][6]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_gameId",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "column",
        type: "uint8",
      },
    ],
    name: "makeMove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610f0f806100206000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c80639b33b429116100505780639b33b42914610094578063a2f77bcc146100bd578063d7c81b551461013b57600080fd5b80635e24b0f11461006c57806372fb970314610081575b600080fd5b61007f61007a366004610cf2565b610152565b005b61007f61008f366004610d25565b6104b4565b6100a76100a2366004610d55565b61061a565b6040516100b49190610d70565b60405180910390f35b6101086100cb366004610dd4565b60016020819052600091825260409091208054918101546002909101546001600160a01b039283169291821691811690600160a01b900460ff1684565b604080516001600160a01b0395861681529385166020850152919093169082015260ff90911660608201526080016100b4565b61014460005481565b6040519081526020016100b4565b60ff82166000818152600160205260409020600201546001600160a01b0316156101a8576040517fdf469ccb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8160068160ff16106101e6576040517f3df99dee00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60ff84166000908152600160208190526040822060028101549092918291600160a01b9004161561021857600161021b565b60025b6002840154909150600160a01b9004600116156102425782546001600160a01b0316610251565b60018301546001600160a01b03165b6001600160a01b0316336001600160a01b03161461029b576040517fe60c8f5800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60068160ff16101561035f576000846003018860ff16600681106102c4576102c4610ded565b018260ff16600681106102d9576102d9610ded565b602081049091015460ff601f9092166101000a900481169150821660050361032d576040517f3df99dee00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060ff1660000361034c578161034281610e4b565b925093505061035f565b508061035781610e4b565b91505061029e565b5080836003018760ff166006811061037957610379610ded565b018360ff166006811061038e5761038e610ded565b60208104909101805460ff938416601f9093166101000a9283029284021916919091179055600284018054600160a01b90049091169060146103cf83610e4b565b82546101009290920a60ff818102199093169183160217909155604080518a83168152336020820152918916908201527fa6f41f711ea470b4b237d1b3e43b201e53517677308ae067a273fb1948ddbf0c915060600160405180910390a1610439878784846106b9565b156104ab576002830180547fffffffffffffffffffffffff000000000000000000000000000000000000000016339081179091556040805160ff8a16815260208101929092527fb7f35e624e036288272fbf3342c09219261ff29fdddd826989b289134e9ae535910160405180910390a15b50505050505050565b806001600160a01b03811633036104ca57600080fd5b6104d2610b90565b6040805160a0810182523381526001600160a01b038581166020808401918252600084860181815260608601828152608087018981528354845260019485905297909220865181549087167fffffffffffffffffffffffff00000000000000000000000000000000000000009182161782559451938101805494871694909516939093179093559151600282018054935160ff16600160a01b027fffffffffffffffffffffff0000000000000000000000000000000000000000009094169190941617919091179091559151909182916105b29060038301906006610bbd565b5050600054604080519182523360208301526001600160a01b038716908201527f8946648bc1dbc670d3f07e2c4de91731227b6d4ccc53b8ab1e951e84d960577e915060600160405180910390a160008054908061060f83610e6a565b919050555050505050565b610622610b90565b60ff8216600090815260016020526040808220815160c081019092529091600390910190600690835b828210156106ae576040805160c08101918290529085840190600690826000855b825461010083900a900460ff1681526020600192830181810494850194909303909202910180841161066c57905050505050508152602001906001019061064b565b505050509050919050565b6000806106c886868686610759565b9050806004036106dc576001915050610751565b60006106ea87878787610825565b9050806004036106ff57600192505050610751565b600061070d888888886108dc565b9050806004036107235760019350505050610751565b6000610731898989896109e2565b905080600403610748576001945050505050610751565b60009450505050505b949350505050565b60006001816107688683610e84565b90505b610776866006610ea3565b60ff168160ff1610156107bd5761078f87828787610b22565b156107a6578161079e81610e6a565b9250506107ab565b6107bd565b806107b581610e4b565b91505061076b565b5060ff85161561081c5760006107d4600187610ea3565b90505b6107e387828787610b22565b156107fa57816107f281610e6a565b9250506107ff565b61081a565b60ff81161561081a578061081281610ebc565b9150506107d7565b505b95945050505050565b60006001816108348583610e84565b90505b610842856006610ea3565b60ff168160ff1610156108895761085b87878387610b22565b15610872578161086a81610e6a565b925050610877565b610889565b8061088181610e4b565b915050610837565b5060ff84161561081c5760006108a0600186610ea3565b90505b6108af87878387610b22565b156107fa57816108be81610e6a565b92505060ff81161561081a57806108d481610ebc565b9150506108a3565b60006001816108eb8583610e84565b90505b6108f9856006610ea3565b60ff168160ff1610156109405761091287828387610b22565b15610929578161092181610e6a565b92505061092e565b610940565b8061093881610e4b565b9150506108ee565b5060ff841615801590610955575060ff851615155b1561081c576000610967600186610ea3565b90506000610976600188610ea3565b90505b61098588828488610b22565b1561099c578261099481610e6a565b9350506109a1565b6109d6565b60ff821615806109b2575060ff8116155b6109d657816109c081610ebc565b92505080806109ce90610ebc565b915050610979565b50509050949350505050565b6000600160ff8416158015906109fa575060ff851615155b15610a80576000610a0c600186610ea3565b90506000610a1b876001610e84565b90505b610a2a88828488610b22565b15610a415782610a3981610e6a565b935050610a46565b610a7d565b60ff82161580610a59575060068160ff16115b610a7d5781610a6781610ebc565b9250508080610a7590610e4b565b915050610a1e565b50505b60ff841615801590610a94575060ff851615155b1561081c576000610aa6856001610e84565b90506000610ab5600188610ea3565b90505b60078260ff161080610ac8575060015b156109d657610ad988828488610b22565b1561099c5782610ae881610e6a565b93505060068260ff161180610afe575060ff8116155b6109d65781610b0c81610e4b565b9250508080610b1a90610ebc565b915050610ab8565b600080600160008760ff16815260200190815260200160002060030190508260ff16818660ff1660068110610b5957610b59610ded565b018560ff1660068110610b6e57610b6e610ded565b602081049091015460ff601f9092166101000a90041614915050949350505050565b6040518060c001604052806006905b610ba7610c07565b815260200190600190039081610b9f5790505090565b8260068101928215610bf7579160200282015b82811115610bf7578251610be79083906006610c25565b5091602001919060010190610bd0565b50610c03929150610cb4565b5090565b6040518060c001604052806006906020820280368337509192915050565b600183019183908215610ca85791602002820160005b83821115610c7957835183826101000a81548160ff021916908360ff1602179055509260200192600101602081600001049283019260010302610c3b565b8015610ca65782816101000a81549060ff0219169055600101602081600001049283019260010302610c79565b505b50610c03929150610cc8565b80821115610c035760008155600101610cb4565b80821115610c035760008155600101610cb4565b803560ff81168114610ced57600080fd5b919050565b60008060408385031215610d0557600080fd5b610d0e83610cdc565b9150610d1c60208401610cdc565b90509250929050565b600060208284031215610d3757600080fd5b81356001600160a01b0381168114610d4e57600080fd5b9392505050565b600060208284031215610d6757600080fd5b610d4e82610cdc565b610480810181836000805b6006808210610d8a5750610dca565b835185845b83811015610db057825160ff16825260209283019290910190600101610d8f565b50505060c094909401935060209290920191600101610d7b565b5050505092915050565b600060208284031215610de657600080fd5b5035919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600060ff821660ff8103610e6157610e61610e1c565b60010192915050565b60006000198203610e7d57610e7d610e1c565b5060010190565b60ff8181168382160190811115610e9d57610e9d610e1c565b92915050565b60ff8281168282160390811115610e9d57610e9d610e1c565b600060ff821680610ecf57610ecf610e1c565b600019019291505056fea26469706673582212203f955dcaab62762db30484a3c4b4b4850714ae05a8c308497dcb4f9d3de1ecc264736f6c63430008110033";

type ConnectFourConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ConnectFourConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ConnectFour__factory extends ContractFactory {
  constructor(...args: ConnectFourConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ConnectFour> {
    return super.deploy(overrides || {}) as Promise<ConnectFour>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ConnectFour {
    return super.attach(address) as ConnectFour;
  }
  override connect(signer: Signer): ConnectFour__factory {
    return super.connect(signer) as ConnectFour__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ConnectFourInterface {
    return new utils.Interface(_abi) as ConnectFourInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ConnectFour {
    return new Contract(address, _abi, signerOrProvider) as ConnectFour;
  }
}
