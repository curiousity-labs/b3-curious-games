/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { ConnectFour, ConnectFourInterface } from "../ConnectFour";

const _abi = [
  {
    inputs: [],
    name: "GameOver",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidSelection",
    type: "error",
  },
  {
    inputs: [],
    name: "NotYourTurn",
    type: "error",
  },
  {
    inputs: [],
    name: "SeasonOver",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "teamOne",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "teamTwo",
        type: "address",
      },
    ],
    name: "GameCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "winner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
    ],
    name: "GameFinished",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "team",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "column",
        type: "uint256",
      },
    ],
    name: "TurnTaken",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "opponent",
        type: "address",
      },
    ],
    name: "challenge",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_gameId",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "column",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "row",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "teamNum",
        type: "uint8",
      },
    ],
    name: "didPlayerWin",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "getGame",
    outputs: [
      {
        internalType: "address",
        name: "teamOne",
        type: "address",
      },
      {
        internalType: "address",
        name: "teamTwo",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "turn",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "winner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_gameId",
        type: "uint256",
      },
    ],
    name: "getGameBoard",
    outputs: [
      {
        internalType: "uint8[6][6]",
        name: "",
        type: "uint8[6][6]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_gameId",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "column",
        type: "uint8",
      },
    ],
    name: "makeMove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052600160065534801561001557600080fd5b50610f4f806100256000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c806372fb97031161005057806372fb9703146100aa578063a2f77bcc146100cb578063ae5261301461014a57600080fd5b80631a2361e71461006c5780635e24b0f114610095575b600080fd5b61007f61007a366004610c6f565b61016d565b60405161008c9190610c88565b60405180910390f35b6100a86100a3366004610d02565b610208565b005b6100bd6100b8366004610d35565b610523565b60405190815260200161008c565b6101146100d9366004610c6f565b6007602052600090815260409020805460018201546002909201546001600160a01b039182169282811692600160a01b90910460ff16911684565b604080516001600160a01b039586168152938516602085015260ff9092169183019190915291909116606082015260800161008c565b61015d610158366004610d65565b610715565b604051901515815260200161008c565b610175610b23565b600082815260076020526040808220815160c081019092529091600390910190600690835b828210156101fd576040805160c08101918290529085840190600690826000855b825461010083900a900460ff168152602060019283018181049485019490930390920291018084116101bb57905050505050508152602001906001019061019a565b505050509050919050565b60ff821660009081526007602052604090206002015482906001600160a01b031615610260576040517fdf469ccb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8160068160ff161061029e576040517f3df99dee00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60ff841660009081526007602052604081206001808201549192918291600160a01b90910416156102d05760016102d3565b60025b600180850154919250600160a01b90910416156102fa5782546001600160a01b0316610309565b60018301546001600160a01b03165b6001600160a01b0316336001600160a01b031614610353576040517fe60c8f5800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60068160ff1610156103d9576000846003018860ff166006811061037c5761037c610db9565b018260ff166006811061039157610391610db9565b602081049091015460ff601f9092166101000a900416905060008190036103c657816103bc81610e17565b92509350506103d9565b50806103d181610e17565b915050610356565b5080836003018760ff16600681106103f3576103f3610db9565b018360ff166006811061040857610408610db9565b60208104909101805460ff938416601f9093166101000a9283029284021916919091179055600184018054600160a01b900490911690601461044983610e17565b82546101009290920a60ff8181021990931691831602179091556040805133815291891660208301527f2080025c96ee0fbc95f61862d9ee484eff89fb949136b5e9d3f7db7fa92651aa92500160405180910390a16104aa87878484610715565b1561051a576002830180547fffffffffffffffffffffffff000000000000000000000000000000000000000016339081179091556040805191825260ff891660208301527f27223f8d1d659564536abdf661d810b8a16ca4f6c69034f2a73b74b0853d9829910160405180910390a15b50505050505050565b6000816001600160a01b038116330361053b57600080fd5b6040805160a0810182523381526001600160a01b0385166020820152600081830181905260608201819052825160c0810190935291608082019083600681835b828210156105de576040805160c08101918290529085840190600690826000855b825461010083900a900460ff1681526020600192830181810494850194909303909202910180841161059c57905050505050508152602001906001019061057b565b50505091525060068054600090815260076020908152604091829020845181546001600160a01b039182167fffffffffffffffffffffffff0000000000000000000000000000000000000000918216178355928601516001830180549588015160ff16600160a01b027fffffffffffffffffffffff00000000000000000000000000000000000000000090961691831691909117949094179093556060850151600282018054919094169216919091179091556080830151929350839290916106ab916003840191610b50565b5050600654604080519182523360208301526001600160a01b038716908201527f8946648bc1dbc670d3f07e2c4de91731227b6d4ccc53b8ab1e951e84d960577e915060600160405180910390a16006805490600061070983610e36565b90915550949350505050565b60ff8416600090815260076020526040812060030181610737828787876107a0565b905061077b6040518060400160405280601b81526020017f2d2d2d2d2d2d2d2d2d2d666f7277617264416e676c65436f756e7400000000008152508260ff166108dc565b8060ff1660040361079157600192505050610798565b6000925050505b949350505050565b6000600160ff8416158015906107b8575060ff851615155b156108d35760006107ca600186610e50565b905060006107d9600188610e50565b90505b8460ff166002036108735761082d6040518060400160405280600d81526020017f4f4720726f772f436f6c756d6e000000000000000000000000000000000000008152508760ff168960ff16610953565b6108736040518060400160405280600a81526020017f726f772f636f6c756d6e000000000000000000000000000000000000000000008152508360ff168360ff16610953565b61087f888284886109cd565b15610896578261088e81610e17565b93505061089b565b6108d0565b60ff821615806108ac575060ff8116155b6108d057816108ba81610e6f565b92505080806108c890610e6f565b9150506107dc565b50505b95945050505050565b61094f82826040516024016108f2929190610ed2565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fb60e72cc00000000000000000000000000000000000000000000000000000000179052610b02565b5050565b6109c883838360405160240161096b93929190610ef4565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fca47c4eb00000000000000000000000000000000000000000000000000000000179052610b02565b505050565b60008160ff16600203610a5e57610a1c6040518060400160405280600381526020017f726f7700000000000000000000000000000000000000000000000000000000008152508460ff166108dc565b610a5e6040518060400160405280600681526020017f636f6c756d6e00000000000000000000000000000000000000000000000000008152508560ff166108dc565b6000858560ff1660068110610a7557610a75610db9565b018460ff1660068110610a8a57610a8a610db9565b602081049091015460ff601f9092166101000a9004811691508316600203610aee57610aee6040518060400160405280600681526020017f73717561726500000000000000000000000000000000000000000000000000008152508260ff166108dc565b8260ff168160ff1614915050949350505050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6040518060c001604052806006905b610b3a610b9a565b815260200190600190039081610b325790505090565b8260068101928215610b8a579160200282015b82811115610b8a578251610b7a9083906006610bb8565b5091602001919060010190610b63565b50610b96929150610c47565b5090565b6040518060c001604052806006906020820280368337509192915050565b600183019183908215610c3b5791602002820160005b83821115610c0c57835183826101000a81548160ff021916908360ff1602179055509260200192600101602081600001049283019260010302610bce565b8015610c395782816101000a81549060ff0219169055600101602081600001049283019260010302610c0c565b505b50610b96929150610c5b565b80821115610b965760008155600101610c47565b80821115610b965760008155600101610c47565b600060208284031215610c8157600080fd5b5035919050565b610480810181836000805b6006808210610ca25750610ce2565b835185845b83811015610cc857825160ff16825260209283019290910190600101610ca7565b50505060c094909401935060209290920191600101610c93565b5050505092915050565b803560ff81168114610cfd57600080fd5b919050565b60008060408385031215610d1557600080fd5b610d1e83610cec565b9150610d2c60208401610cec565b90509250929050565b600060208284031215610d4757600080fd5b81356001600160a01b0381168114610d5e57600080fd5b9392505050565b60008060008060808587031215610d7b57600080fd5b610d8485610cec565b9350610d9260208601610cec565b9250610da060408601610cec565b9150610dae60608601610cec565b905092959194509250565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600060ff821660ff8103610e2d57610e2d610de8565b60010192915050565b60006000198203610e4957610e49610de8565b5060010190565b60ff8281168282160390811115610e6957610e69610de8565b92915050565b600060ff821680610e8257610e82610de8565b6000190192915050565b6000815180845260005b81811015610eb257602081850181015186830182015201610e96565b506000602082860101526020601f19601f83011685010191505092915050565b604081526000610ee56040830185610e8c565b90508260208301529392505050565b606081526000610f076060830186610e8c565b6020830194909452506040015291905056fea2646970667358221220ef8a25865550f7c136dbc9b7af8c1bf8bd155d10e4b4ed9f564b3e012ac0b8c164736f6c63430008110033";

type ConnectFourConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ConnectFourConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ConnectFour__factory extends ContractFactory {
  constructor(...args: ConnectFourConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ConnectFour> {
    return super.deploy(overrides || {}) as Promise<ConnectFour>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ConnectFour {
    return super.attach(address) as ConnectFour;
  }
  override connect(signer: Signer): ConnectFour__factory {
    return super.connect(signer) as ConnectFour__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ConnectFourInterface {
    return new utils.Interface(_abi) as ConnectFourInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ConnectFour {
    return new Contract(address, _abi, signerOrProvider) as ConnectFour;
  }
}
