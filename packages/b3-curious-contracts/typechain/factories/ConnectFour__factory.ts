/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { ConnectFour, ConnectFourInterface } from "../ConnectFour";

const _abi = [
  {
    inputs: [],
    name: "GameOver",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidSelection",
    type: "error",
  },
  {
    inputs: [],
    name: "NotYourTurn",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "winnder",
        type: "address",
      },
    ],
    name: "GameFinished",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "team",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "col",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "row",
        type: "uint256",
      },
    ],
    name: "TurnTaken",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "board",
    outputs: [
      {
        internalType: "uint8",
        name: "state",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentTurn",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "game_winner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_teamOne",
        type: "address",
      },
      {
        internalType: "address",
        name: "_teamTwo",
        type: "address",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "col",
        type: "uint256",
      },
    ],
    name: "playTurn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "teamOne",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "teamTwo",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052600080546001600160a01b03199081169091556001805482169055600280548216905560038054909116905534801561003c57600080fd5b50610aad8061004c6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063a0fc6cff1161005b578063a0fc6cff14610105578063d8e4f9d91461011a578063deb612861461012d578063f09a40161461014057600080fd5b8063356c22ec146100825780638086a92a146100b257806383cbd06d146100f2575b600080fd5b600154610095906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100e06100c0366004610945565b600460209081526000928352604080842090915290825290205460ff1681565b60405160ff90911681526020016100a9565b600054610095906001600160a01b031681565b610118610113366004610967565b610189565b005b600254610095906001600160a01b031681565b600354610095906001600160a01b031681565b61011861014e36600461099c565b600180546001600160a01b0393841673ffffffffffffffffffffffffffffffffffffffff199182161790915560028054929093169116179055565b6000546001600160a01b0316156101cc576040517fdf469ccb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806000811180156101dd5750600781105b156101fb57604051631efccef760e11b815260040160405180910390fd5b6003546001600160a01b03166104e05760035460015460009182916001600160a01b0390811691161461022f576002610232565b60015b905060015b600781116102af576000858152600460209081526040808320848452825280832081519283019091525460ff1680825290910361027757819350506102af565b805160ff1660070361029c57604051631efccef760e11b815260040160405180910390fd5b50806102a7816109fe565b915050610237565b50604080516020808201835260ff84811683526000888152600483528481208782529092528382209251835460ff191691161790915581516080810190925290806102ff878660018760086107fb565b61030e888760018860006107fb565b6103189190610a18565b815260200161032c878660018760076107fb565b61033b888760018860016107fb565b6103459190610a18565b8152602001610359878660018760026107fb565b610368888760018860066107fb565b6103729190610a18565b8152602001610386878660018760026107fb565b610395888760018860066107fb565b61039f9190610a18565b9052905060005b600481101561043d578181600481106103c1576103c1610a31565b602002015160040361042b576000805473ffffffffffffffffffffffffffffffffffffffff1916339081179091556040519081527f1728dd43546edd06fabfe796e5b641a151aa90998bfd1b1ec0ae98c6e77084599060200160405180910390a1505050506104e0565b80610435816109fe565b9150506103a6565b506001546001600160a01b03163314610461576001546001600160a01b031661046e565b6002546001600160a01b03165b6003805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b039290921691909117905560408051338152602081018790529081018490527fa576497318f2fd64b7031f7fc7bf786089ecc01ad7df643fe1194c2edd9388069060600160405180910390a15050505b6003546001600160a01b03163303610524576040517fe60c8f5800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60035460015460009182916001600160a01b0390811691161461054857600261054b565b60015b905060015b600781116105c8576000858152600460209081526040808320848452825280832081519283019091525460ff1680825290910361059057819350506105c8565b805160ff166007036105b557604051631efccef760e11b815260040160405180910390fd5b50806105c0816109fe565b915050610550565b50604080516020808201835260ff84811683526000888152600483528481208782529092528382209251835460ff19169116179091558151608081019092529080610618878660018760086107fb565b610627888760018860006107fb565b6106319190610a18565b8152602001610645878660018760076107fb565b610654888760018860016107fb565b61065e9190610a18565b8152602001610672878660018760026107fb565b610681888760018860066107fb565b61068b9190610a18565b815260200161069f878660018760026107fb565b6106ae888760018860066107fb565b6106b89190610a18565b9052905060005b6004811015610755578181600481106106da576106da610a31565b6020020151600403610743576000805473ffffffffffffffffffffffffffffffffffffffff1916339081179091556040519081527f1728dd43546edd06fabfe796e5b641a151aa90998bfd1b1ec0ae98c6e77084599060200160405180910390a1505050505050565b8061074d816109fe565b9150506106bf565b506001546001600160a01b03163314610779576001546001600160a01b0316610786565b6002546001600160a01b03165b6003805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b039290921691909117905560408051338152602081018790529081018490527fa576497318f2fd64b7031f7fc7bf786089ecc01ad7df643fe1194c2edd9388069060600160405180910390a15050505050565b6000858152600460209081526040808320878452825280832081519283019091525460ff908116808352908516900361093a578260ff166000036108695761086787610846816109fe565b98508761085281610a60565b98508761085e816109fe565b985087876107fb565b505b8260ff166001036108905761088e87610881816109fe565b9850878761085e816109fe565b505b8260ff166002036108b6576108b4876108a8816109fe565b985087610852816109fe565b505b8260ff166003036108d1576108cf878761085281610a60565b505b8260ff166005036108ec576108ea8787610852816109fe565b505b8260ff16600603610906576109048761084681610a60565b505b8260ff166007036109205761091e8761088181610a60565b505b8260ff1660080361093a57610938876108a881610a60565b505b509295945050505050565b6000806040838503121561095857600080fd5b50508035926020909101359150565b60006020828403121561097957600080fd5b5035919050565b80356001600160a01b038116811461099757600080fd5b919050565b600080604083850312156109af57600080fd5b6109b883610980565b91506109c660208401610980565b90509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006000198203610a1157610a116109cf565b5060010190565b80820180821115610a2b57610a2b6109cf565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081610a6f57610a6f6109cf565b50600019019056fea2646970667358221220b29055b48488e8df94ccb2b3a5f4b2d5900b5f5ef936c8e46cb108621b66944964736f6c63430008110033";

type ConnectFourConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ConnectFourConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ConnectFour__factory extends ContractFactory {
  constructor(...args: ConnectFourConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ConnectFour> {
    return super.deploy(overrides || {}) as Promise<ConnectFour>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ConnectFour {
    return super.attach(address) as ConnectFour;
  }
  override connect(signer: Signer): ConnectFour__factory {
    return super.connect(signer) as ConnectFour__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ConnectFourInterface {
    return new utils.Interface(_abi) as ConnectFourInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ConnectFour {
    return new Contract(address, _abi, signerOrProvider) as ConnectFour;
  }
}
