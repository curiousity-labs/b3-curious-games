/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { ConnectFour, ConnectFourInterface } from "../ConnectFour";

const _abi = [
  {
    inputs: [],
    name: "GameOver",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidSelection",
    type: "error",
  },
  {
    inputs: [],
    name: "NotYourTurn",
    type: "error",
  },
  {
    inputs: [],
    name: "SeasonOver",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "teamOne",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "teamTwo",
        type: "address",
      },
    ],
    name: "GameCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "winner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
    ],
    name: "GameFinished",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "team",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "column",
        type: "uint256",
      },
    ],
    name: "TurnTaken",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "opponent",
        type: "address",
      },
    ],
    name: "challenge",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "getGame",
    outputs: [
      {
        internalType: "address",
        name: "teamOne",
        type: "address",
      },
      {
        internalType: "address",
        name: "teamTwo",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "turn",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "winner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_gameId",
        type: "uint256",
      },
    ],
    name: "getGameBoard",
    outputs: [
      {
        internalType: "uint8[6][6]",
        name: "",
        type: "uint8[6][6]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_gameId",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "column",
        type: "uint8",
      },
    ],
    name: "makeMove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052600160065534801561001557600080fd5b50610f57806100256000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80631a2361e7146100515780635e24b0f11461007a57806372fb97031461008f578063a2f77bcc146100b0575b600080fd5b61006461005f366004610d3f565b61012f565b6040516100719190610d58565b60405180910390f35b61008d610088366004610dd2565b6101ca565b005b6100a261009d366004610e05565b610523565b604051908152602001610071565b6100f96100be366004610d3f565b6007602052600090815260409020805460018201546002909201546001600160a01b039182169282811692600160a01b90910460ff16911684565b604080516001600160a01b039586168152938516602085015260ff90921691830191909152919091166060820152608001610071565b610137610bf3565b600082815260076020526040808220815160c081019092529091600390910190600690835b828210156101bf576040805160c08101918290529085840190600690826000855b825461010083900a900460ff1681526020600192830181810494850194909303909202910180841161017d57905050505050508152602001906001019061015c565b505050509050919050565b60ff821660009081526007602052604090206002015482906001600160a01b031615610222576040517fdf469ccb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8160068160ff1610610260576040517f3df99dee00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60ff841660009081526007602052604081206001808201549192918291600160a01b9091041615610292576001610295565b60025b600180850154919250600160a01b90910416156102bc5782546001600160a01b03166102cb565b60018301546001600160a01b03165b6001600160a01b0316336001600160a01b031614610315576040517fe60c8f5800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60068160ff1610156103d9576000846003018860ff166006811061033e5761033e610e35565b018260ff166006811061035357610353610e35565b602081049091015460ff601f9092166101000a90048116915082166005036103a7576040517f3df99dee00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060ff166000036103c657816103bc81610e93565b92509350506103d9565b50806103d181610e93565b915050610318565b5080836003018760ff16600681106103f3576103f3610e35565b018360ff166006811061040857610408610e35565b60208104909101805460ff938416601f9093166101000a9283029284021916919091179055600184018054600160a01b900490911690601461044983610e93565b82546101009290920a60ff8181021990931691831602179091556040805133815291891660208301527f2080025c96ee0fbc95f61862d9ee484eff89fb949136b5e9d3f7db7fa92651aa92500160405180910390a16104aa87878484610715565b1561051a576002830180547fffffffffffffffffffffffff000000000000000000000000000000000000000016339081179091556040805191825260ff891660208301527f27223f8d1d659564536abdf661d810b8a16ca4f6c69034f2a73b74b0853d9829910160405180910390a15b50505050505050565b6000816001600160a01b038116330361053b57600080fd5b6040805160a0810182523381526001600160a01b0385166020820152600081830181905260608201819052825160c0810190935291608082019083600681835b828210156105de576040805160c08101918290529085840190600690826000855b825461010083900a900460ff1681526020600192830181810494850194909303909202910180841161059c57905050505050508152602001906001019061057b565b50505091525060068054600090815260076020908152604091829020845181546001600160a01b039182167fffffffffffffffffffffffff0000000000000000000000000000000000000000918216178355928601516001830180549588015160ff16600160a01b027fffffffffffffffffffffff00000000000000000000000000000000000000000090961691831691909117949094179093556060850151600282018054919094169216919091179091556080830151929350839290916106ab916003840191610c20565b5050600654604080519182523360208301526001600160a01b038716908201527f8946648bc1dbc670d3f07e2c4de91731227b6d4ccc53b8ab1e951e84d960577e915060600160405180910390a16006805490600061070983610eb2565b90915550949350505050565b60ff8416600090815260076020526040812060030181610737828787876107d9565b90508060ff1660040361074f576001925050506107d1565b600061075d838888886108a5565b90508060ff1660040361077657600193505050506107d1565b60006107848489898961095c565b90508060ff1660040361079e5760019450505050506107d1565b60006107ac858a8a8a610a62565b90508060ff166004036107c7576001955050505050506107d1565b6000955050505050505b949350505050565b60006001816107e88683610ecc565b90505b6107f6866006610eeb565b60ff168160ff16101561083d5761080f87828787610ba2565b15610826578161081e81610e93565b92505061082b565b61083d565b8061083581610e93565b9150506107eb565b5060ff85161561089c576000610854600187610eeb565b90505b61086387828787610ba2565b1561087a578161087281610e93565b92505061087f565b61089a565b60ff81161561089a578061089281610f04565b915050610857565b505b95945050505050565b60006001816108b48583610ecc565b90505b6108c2856006610eeb565b60ff168160ff161015610909576108db87878387610ba2565b156108f257816108ea81610e93565b9250506108f7565b610909565b8061090181610e93565b9150506108b7565b5060ff84161561089c576000610920600186610eeb565b90505b61092f87878387610ba2565b1561087a578161093e81610e93565b92505060ff81161561089a578061095481610f04565b915050610923565b600060018161096b8583610ecc565b90505b610979856006610eeb565b60ff168160ff1610156109c05761099287828387610ba2565b156109a957816109a181610e93565b9250506109ae565b6109c0565b806109b881610e93565b91505061096e565b5060ff8416158015906109d5575060ff851615155b1561089c5760006109e7600186610eeb565b905060006109f6600188610eeb565b90505b610a0588828488610ba2565b15610a1c5782610a1481610e93565b935050610a21565b610a56565b60ff82161580610a32575060ff8116155b610a565781610a4081610f04565b9250508080610a4e90610f04565b9150506109f9565b50509050949350505050565b6000600160ff841615801590610a7a575060ff851615155b15610b00576000610a8c600186610eeb565b90506000610a9b876001610ecc565b90505b610aaa88828488610ba2565b15610ac15782610ab981610e93565b935050610ac6565b610afd565b60ff82161580610ad9575060068160ff16115b610afd5781610ae781610f04565b9250508080610af590610e93565b915050610a9e565b50505b60ff841615801590610b14575060ff851615155b1561089c576000610b26856001610ecc565b90506000610b35600188610eeb565b90505b60078260ff161080610b48575060015b15610a5657610b5988828488610ba2565b15610a1c5782610b6881610e93565b93505060068260ff161180610b7e575060ff8116155b610a565781610b8c81610e93565b9250508080610b9a90610f04565b915050610b38565b60008160ff16858560ff1660068110610bbd57610bbd610e35565b018460ff1660068110610bd257610bd2610e35565b602081049091015460ff601f9092166101000a900416149050949350505050565b6040518060c001604052806006905b610c0a610c6a565b815260200190600190039081610c025790505090565b8260068101928215610c5a579160200282015b82811115610c5a578251610c4a9083906006610c88565b5091602001919060010190610c33565b50610c66929150610d17565b5090565b6040518060c001604052806006906020820280368337509192915050565b600183019183908215610d0b5791602002820160005b83821115610cdc57835183826101000a81548160ff021916908360ff1602179055509260200192600101602081600001049283019260010302610c9e565b8015610d095782816101000a81549060ff0219169055600101602081600001049283019260010302610cdc565b505b50610c66929150610d2b565b80821115610c665760008155600101610d17565b80821115610c665760008155600101610d17565b600060208284031215610d5157600080fd5b5035919050565b610480810181836000805b6006808210610d725750610db2565b835185845b83811015610d9857825160ff16825260209283019290910190600101610d77565b50505060c094909401935060209290920191600101610d63565b5050505092915050565b803560ff81168114610dcd57600080fd5b919050565b60008060408385031215610de557600080fd5b610dee83610dbc565b9150610dfc60208401610dbc565b90509250929050565b600060208284031215610e1757600080fd5b81356001600160a01b0381168114610e2e57600080fd5b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600060ff821660ff8103610ea957610ea9610e64565b60010192915050565b60006000198203610ec557610ec5610e64565b5060010190565b60ff8181168382160190811115610ee557610ee5610e64565b92915050565b60ff8281168282160390811115610ee557610ee5610e64565b600060ff821680610f1757610f17610e64565b600019019291505056fea264697066735822122026948f833bea643e860995b344f265ef095bd6579b342e65bbef1c30e69b3a7b64736f6c63430008110033";

type ConnectFourConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ConnectFourConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ConnectFour__factory extends ContractFactory {
  constructor(...args: ConnectFourConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ConnectFour> {
    return super.deploy(overrides || {}) as Promise<ConnectFour>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ConnectFour {
    return super.attach(address) as ConnectFour;
  }
  override connect(signer: Signer): ConnectFour__factory {
    return super.connect(signer) as ConnectFour__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ConnectFourInterface {
    return new utils.Interface(_abi) as ConnectFourInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ConnectFour {
    return new Contract(address, _abi, signerOrProvider) as ConnectFour;
  }
}
