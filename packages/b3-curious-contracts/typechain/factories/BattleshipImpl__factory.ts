/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  BattleshipImpl,
  BattleshipImplInterface,
} from "../BattleshipImpl";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "winner",
        type: "address",
      },
    ],
    name: "GameFinished",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "teamNumber",
        type: "uint256",
      },
    ],
    name: "TeamReady",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "team",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes4",
        name: "target",
        type: "bytes4",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isSuccessful",
        type: "bool",
      },
    ],
    name: "TurnFinished",
    type: "event",
  },
  {
    inputs: [],
    name: "currentTurn",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "game_winner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_teamOne",
        type: "address",
      },
      {
        internalType: "address",
        name: "_teamTwo",
        type: "address",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4[15]",
        name: "targets",
        type: "bytes4[15]",
      },
    ],
    name: "setTeamOnePieces",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4[15]",
        name: "targets",
        type: "bytes4[15]",
      },
    ],
    name: "setTeamTwoPieces",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "target",
        type: "bytes4",
      },
    ],
    name: "takeTurn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "teamOne",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "teamTwo",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052600080546001600160a01b03199081169091556001805482169055600280548216905560038054909116905534801561003c57600080fd5b506109818061004c6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063deb612861161005b578063deb61286146100f7578063e7d4eb091461010a578063ef61b3201461011d578063f09a40161461013057600080fd5b8063356c22ec1461008d57806373f081ee146100bc57806383cbd06d146100d1578063d8e4f9d9146100e4575b600080fd5b6001546100a0906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b6100cf6100ca3660046107c8565b610179565b005b6000546100a0906001600160a01b031681565b6002546100a0906001600160a01b031681565b6003546100a0906001600160a01b031681565b6100cf6101183660046107ea565b6102d3565b6100cf61012b3660046107ea565b610399565b6100cf61013e366004610895565b600180546001600160a01b0393841673ffffffffffffffffffffffffffffffffffffffff199182161790915560028054929093169116179055565b3360009081526004602052604090205460019060ff16151581146101e45760405162461bcd60e51b815260206004820152600a60248201527f506965636573205365740000000000000000000000000000000000000000000060448201526064015b60405180910390fd5b6003546001600160a01b031615801561020757506002546001600160a01b031633145b15610250576001546001600160a01b03163303610239576002546102359083906001600160a01b031661045f565b5050565b6001546102359083906001600160a01b031661045f565b6003546001600160a01b031633146102aa5760405162461bcd60e51b815260206004820152600d60248201527f4e6f7420796f7572207475726e0000000000000000000000000000000000000060448201526064016101db565b6001546001600160a01b03163303610239576002546102359083906001600160a01b031661045f565b3360009081526004602052604081205460ff16156103335760405162461bcd60e51b815260206004820152600a60248201527f506965636573205365740000000000000000000000000000000000000000000060448201526064016101db565b6001546001600160a01b0316331461038d5760405162461bcd60e51b815260206004820152600d60248201527f5465616d204f6e65204f6e6c790000000000000000000000000000000000000060448201526064016101db565b610235823360016106cc565b3360009081526004602052604081205460ff16156103f95760405162461bcd60e51b815260206004820152600a60248201527f506965636573205365740000000000000000000000000000000000000000000060448201526064016101db565b6002546001600160a01b031633146104535760405162461bcd60e51b815260206004820152600d60248201527f5465616d2054776f204f6e6c790000000000000000000000000000000000000060448201526064016101db565b610235823360026106cc565b6000546001600160a01b0316156104b85760405162461bcd60e51b815260206004820152600c60248201527f47616d65206973204f766572000000000000000000000000000000000000000060448201526064016101db565b6001600160a01b03811660009081526005602090815260408083206001600160e01b03198616845290915290205460ff16600114801561052057503360009081526006602090815260408083206001600160e01b03198616845260010190915290205460ff16155b1561065257336000908152600660205260408120805482906105449060ff166108de565b825460ff8083166101009490940a84810291021990911617909255336000908152600660209081526040808320805460ff19908116861782556001600160e01b03198a1685526001918201909352922080549091169091179055909150600f03610602576000805473ffffffffffffffffffffffffffffffffffffffff1916339081179091556040519081527f1728dd43546edd06fabfe796e5b641a151aa90998bfd1b1ec0ae98c6e77084599060200160405180910390a161064c565b604080513381526001600160e01b03198516602082015260018183015290517f5337bbde7e7c72b09a00941bda0ba1caa9206a8bc93d2247d695caea0a4b6de49181900360600190a15b5061069c565b604080513381526001600160e01b03198416602082015260008183015290517f5337bbde7e7c72b09a00941bda0ba1caa9206a8bc93d2247d695caea0a4b6de49181900360600190a15b6003805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b039290921691909117905550565b60005b600f81101561074b576001600160a01b03831660009081526005602052604081206001918684600f8110610705576107056108fd565b602090810291909101516001600160e01b0319168252810191909152604001600020805460ff191660ff929092169190911790558061074381610913565b9150506106cf565b506001600160a01b038216600090815260046020908152604091829020805460ff19166001179055905160ff831681527f47bbdb0c09721515c293db9037a0bb1604262bdaa3853547661a28b8d1653fa0910160405180910390a1505050565b80356001600160e01b0319811681146107c357600080fd5b919050565b6000602082840312156107da57600080fd5b6107e3826107ab565b9392505050565b60006101e08083850312156107fe57600080fd5b83601f84011261080d57600080fd5b60405181810181811067ffffffffffffffff8211171561083d57634e487b7160e01b600052604160045260246000fd5b60405290830190808583111561085257600080fd5b845b8381101561087357610865816107ab565b825260209182019101610854565b509095945050505050565b80356001600160a01b03811681146107c357600080fd5b600080604083850312156108a857600080fd5b6108b18361087e565b91506108bf6020840161087e565b90509250929050565b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff81036108f4576108f46108c8565b60010192915050565b634e487b7160e01b600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610944576109446108c8565b506001019056fea2646970667358221220cf72101a8591b5ae6e946553e8473ae14360e772367db952a0aa938744fcc3de64736f6c63430008110033";

type BattleshipImplConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BattleshipImplConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BattleshipImpl__factory extends ContractFactory {
  constructor(...args: BattleshipImplConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BattleshipImpl> {
    return super.deploy(overrides || {}) as Promise<BattleshipImpl>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): BattleshipImpl {
    return super.attach(address) as BattleshipImpl;
  }
  override connect(signer: Signer): BattleshipImpl__factory {
    return super.connect(signer) as BattleshipImpl__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BattleshipImplInterface {
    return new utils.Interface(_abi) as BattleshipImplInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BattleshipImpl {
    return new Contract(address, _abi, signerOrProvider) as BattleshipImpl;
  }
}
